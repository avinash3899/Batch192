Core-java
jdbc,hibernate
servlet,jsp
spring
restful webservices
springboot
angular +spring boot
software requirement 
1)eclipse  2)tomcat server-9  3)Oracle 10xe 4)Nodejs
-----------------------------------------------------------------------
Features of Java
------------------------
1)Java is purely OOPS (Object Oriented Programming Language).
In this we have class and Object.
2)In java we can develop standalone application,web application,network application and mobile application.
3)Java is simpler than c and c++ as we don't have pointer concept.
4)we have constructor(memory blocks are created) in java but no destructor(memory blocks are deleted).
In java there is automatic garbage clearence.
5)Java is a high level language,it is potable and scaleable.
6)In java we don't have multiple Inheritance.In that case we use Interface which support multiple Inheritace.
7)java is platform independent.
8)java is casesensitive.
--------------------------------------------------------------------------
Data types :-
primative datatypes.
-----------------------------
1)byte ---1 byte 
2)short ---2 bytes
3)int ---4 bytes
4)long ---8 bytes
5)float ---4 bytes
6)double ---8 bytes
7)char ---2 bytes
8)boolan ---1 bit
-------------------------------
derived datatypes
----------------------------
1)String 
2)array
3)class
----------------------------------------
Operators
---------------------
1)Unary operator
i++,i--,++i,--i
---------------------------------
2)Binary operator
a)Arthmatic : +,-,*,/,%(modulus/reminder)
b)logical: ||,&&
c)relational/comparative:<,>,<=,>=,==,!=
d)assignment :- =
e)Bitwise :-<<,>>,nor
-------------------------------------------------
3)Ternary operator  :- ?,:
---------------------------------------------------------------
Access specifier
--------------------------
1)private :-If we declare variables and methods as private we can access it within the class only.

2)public:-If we declare variables and methods as public we can access it within the class ,outside the class and also outside the package.

3)protected:-If we declare variables and methods as proteted we can access it within the class ,outside the class which is inherited(parent class and child class).

4)default:-If we declare variables and methods as default  we can access it within the class and outside the class but not out side the package.
-----------------------------------------------------
package -------class-----methods
we have some predefined packages ie
1)java.lang;
2)java.util;
3)java.io;
-------------------------------------------------
For java we have to install jdk1.16 latest (java development kit)
jre1.16 it is java runtime environment.
jdk is platform dependent means jdk is different for unix,window or Mac.
we have to save the file with .java extention.we have compile it using jit compiler(Just in time ).
we get the compiled file as .class file .it is in byte code.It is platform independent.
* we have to save the file with the <class name>.java
--------------------------------------------------------------------------------------
Program-1
------------------
package org.Monday;

public class Second 
{
public static void main(String[] args) 
{
	byte a=10;
	short b=20;
	int c=30;
	long d=40;
	float e=50.4f;
	double f=60.7;
	char g='a';
	String h="apple";
	System.out.println(a+"   "+b+"   "+c);
	System.out.println(d+"   "+e+"   "+f);
	System.out.println(g+"   "+h);
	}
}
----------------------------------------------------------------
Program-2
--------------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*
public class Second 
{
public static void main(String[] args) 
{
	Scanner ob=new Scanner(System.in);//this is to take input
	System.out.println("enter 2 nos");
	int a=ob.nextInt();//to accept the integer values
	int b=ob.nextInt();
	int c=a+b;
	System.out.println("the sum is "+c);
	}
}
---------------------------------------------------------
Program-3
--------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*
public class Second 
{
public static void main(String[] args) 
{
	Scanner ob=new Scanner(System.in);//this is to take input
	System.out.println("enter 2 nos");
	float a=ob.nextFloat();//to accept the integer values
	float b=ob.nextFloat();
	float c=a+b;
	System.out.println("the sum is "+c);
	}
}
--------------------------------------------------
Program-4
-------------------
package org.monday;
import java.lang.*;
import java.util.*;
public class Firstjava 
{
public static void main(String[] args) {
    Scanner ob = new Scanner(System.in);//to take the input values
    System.out.println("Enter numbers");
    float a = ob.nextFloat();
    float b = ob.nextFloat();
    float c = ob.nextFloat();
    float d = ob.nextFloat();
    float e = ob.nextFloat();
    float f = a+b+c+d+e;
    float g = (a+b+c+d+e)/5;
    System.out.println("The sum is "+f);
    System.out.println("The avg. is "+g);
}
}
-------------------------------------
Program-5
Find greatest of 2 nos.
-------------------------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*
public class Second 
{
	public static void main(String[] args) 
	{
		Scanner ob=new Scanner(System.in);//this is to take input
		System.out.println("enter 2 nos");
		float a=ob.nextFloat();//to accept the integer values
		float b=ob.nextFloat();
		if(a>b)
			System.out.println("the greatest is "+a);
		else
			System.out.println("the greatest is "+b);
	}
}


--------------------------------------------------------------
Program-6
----------------------
wa.p to enter 3 nos and find the greatest
---------------------------------------------------------------------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*
public class Second 
{
	public static void main(String[] args) 
	{
		Scanner ob=new Scanner(System.in);//this is to take input
		System.out.println("enter 3 nos");
		float a=ob.nextFloat();//to accept the integer values
		float b=ob.nextFloat();
		float c=ob.nextFloat();
				if(a>b && a>c)
			System.out.println("the greatest is "+a);
		else if(b>a && b>c)
			System.out.println("the greatest is "+b);
		else
			System.out.println("the greatest is "+c);
	}
}


-----------------------------------------------------------------------
Program-7
---------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*;
public class Second 
{
	public static void main(String[] args) 
	{
		Scanner ob=new Scanner(System.in);//this is to take input
		System.out.println("enter 5 nos");
		int a[]=new int[5];//array of 5 integer
		for(int i=0;i<5;i++)
			a[i]=ob.nextInt();
		System.out.println("the 5 nos are ");
		for(int i=0;i<5;i++)
			System.out.println(a[i]);
	}}
---------------------------------------------------------------------------
Program-8
----------------------------
package org.Monday;
import java.lang.*;//default package
import java.util.*;
public class Second 
{
	public static void main(String[] args) 
	{
		int sum=0;
		Scanner ob=new Scanner(System.in);//this is to take input
		System.out.println("enter 5 nos");
		int a[]=new int[5];//array of 5 integer
		for(int i=0;i<5;i++)
		{
			a[i]=ob.nextInt();
			sum=sum+a[i];
		}
		System.out.println("the 5 nos are ");
		for(int i=0;i<5;i++)
			System.out.println(a[i]);
		System.out.println("the sum of 5 nos is "+sum);
			}
	}
---------------------------------------------------------------------------
Program-9
----------------------
package monday;
import java.util.Scanner;
public class OddEven {
    public static void main(String arg[]) {
        
        Scanner num=new Scanner(System.in);
        System.out.println("Enter five numbers");
        int a[]=new int[5];
        for(int i=0;i<5;i++)
        {
            a[i]=num.nextInt();
        
        }
        System.out.println("THe EVEN numbers are");
        for(int i=0;i<5;i++)
        {
            if(a[i]%2==0)
            {  
                System.out.println(a[i]);  
            }  
            
        }
        System.out.println("THe ODD numbers are");
        for(int i=0;i<5;i++)
        {
            if(a[i]%2!=0)
            {  
                System.out.println(a[i]);  
            }  
            
        }
        
    }
}
-------------------------------------------------------------------------------
class and Object 
----------------------------
class :- It is a collection of variables and methods.
It is a blue print of an object.It is also called as object factory.
------------------------
Object :- it is an reference pointer to the class.
By an object we can access the variables and methods of a class.
----------------------------------------------------------------------------------------
program-10
----------------
package org.Monday;
import java.lang.*;//default package
import java.util.*;;
public class Second 
{
	int rollno;
	String name,address;
	void input()
	{
		Scanner ob=new Scanner(System.in);
		System.out.println("enter rollno,name and address");
		rollno=ob.nextInt();
		name=ob.next();
		address=ob.next();
	}
	void display()
	{
		System.out.println("the rollno is "+rollno);
		System.out.println("the name is "+name);
		System.out.println("the address is "+address);
		
	}
	public static void main(String[] args)
	{
		Second obj=new Second();
		obj.input();
		System.out.println("The rollno is "+obj.rollno);
		obj.display();
	}
}
	
------------------------------------------------
Program-11
--------------------
//Array of objects 
package org.Monday;
import java.lang.*;//default package
import java.util.*;;
public class Second 
{
	String rollno;
	String name,address;
	void input()
	{
		Scanner ob=new Scanner(System.in);
		System.out.println("enter rollno,name and address");
		rollno=ob.nextLine();
		name=ob.nextLine();
		address=ob.nextLine();
	}
	void display()
	{
		System.out.println("the rollno is "+rollno);
		System.out.println("the name is "+name);
		System.out.println("the address is "+address);
		
	}
	public static void main(String[] args)
	{
		Second[] obj=new Second[3];
		for(int i=0;i<3;i++)
		{
			System.out.println("Enter data for Student no "+(i+1));
		obj[i]=new Second();//new object will be created each time	
		obj[i].input();
		}
		for(int i=0;i<3;i++)
		{
			System.out.println("Data of Student no "+(i+1));
		obj[i].display();
		}
	}
}

-----------------------------------------------------------------------------------------
constructor vs method:-
what is a constructor?
1)A constructor is a method which as the same name as that of the class name.
2)A constructor execute automatically when an object is created for a class. memory blocks are build.
3)As the constructor exceute first so all the assignments(initiallization) are done in this.
we have 2 types of constructor.
a)default constructor :- whithout any parameter.
b)parameterized constructor :- with parameter.
4)A constructor doesnot have any return type nor it returns any value.
constructor vs method()
1)A constructor is a method which as the same name as that of the class name but the method can have any name.
2)A constructor execute automatically when an object is created for a class but method has to be called explicitly.
3)A constructor doesnot have any return type nor it returns any value. but a method has return type or void .
4)if we use more than one cunstructor in a program it is known as constructor overloading where as if we use more than one time the method with the same name but different signature it is known as method overloading.
---------------------------------------------------------------------------------
program-12
------------------------
package org.Tuesday;

public class FirstJava 
{
int rollno;      //instance variables or global variables can be accessed through out the class.
String name,address;
FirstJava()
{
	System.out.println("This is a default constructor");
}
FirstJava(int roll,String name,String address)//local variables can be accessed with the methods only
{
	//to differenceat between instance variable and local variables we use this keyword.it points to the 
	//current object  
rollno=roll;
this.name=name;
this.address=address;
}
void display()
{
	System.out.println("The rollno is "+rollno);
	System.out.println("The name is "+name);
	System.out.println("The address is "+address);
	}

}

----------------------------------------------------------------
program-13
----------------------
package org.Tuesday;

public class SecondPrg
{
public static void main(String[] args) 
{
	
FirstJava ob=new FirstJava(101,"sandip","Bangalore");
FirstJava ob1=new FirstJava(102,"Akash","Bangalore");
FirstJava ob2=new FirstJava(103,"Vikash","Bangalore");
FirstJava ob3=new FirstJava(104,"Priyanka","Bangalore");
FirstJava ob4=new FirstJava();
ob.display();
ob1.display();
ob2.display();
ob3.display();
}
}
--------------------------------------------------------------
program-14
-----------------
package org.Tuesday;

public class FirstJava 
{
int rollno;      //instance variables or global variables can be accessed through out the class.
String name,address;//instance variables or global variables can be accessed through out the class.
FirstJava()
{
	System.out.println("This is a default constructor");
}
FirstJava(int rollno,String name,String address)//local variables can be accessed with the methods only
{
	//to differenceat between instance variable and local variables we use this keyword.it points to the 
	//current object  
this.rollno=rollno;
this.name=name;
this.address=address;
}
void display()
{
	System.out.println("The rollno is "+rollno);
	System.out.println("The name is "+name);
	System.out.println("The address is "+address);
	}
int sum(int a,int b)
{//function returns a value where as constructor doesnot return any value
	return a+b;
}
float sum(float a,float b)
{
	return a+b;
}
FirstJava(int a,int b)
{
	System.out.println("the sum of a and b is "+(a+b));
}
}
--------------------------------------------------
program-15
package org.Tuesday;

public class SecondPrg
{
public static void main(String[] args) 
{
FirstJava ob=new FirstJava(101,"sandip","Bangalore");
FirstJava ob1=new FirstJava(102,"Akash","Bangalore");
FirstJava ob2=new FirstJava(103,"Vikash","Bangalore");
FirstJava ob3=new FirstJava(104,"Priyanka","Bangalore");
FirstJava ob4=new FirstJava();//default constructor
FirstJava ob5=new FirstJava(5,8);
System.out.println("the sum is "+ob.sum(5,7)); //with single object we can call n no of methods.
System.out.println("the sum is "+ob.sum(5.5f,7.3f));
ob.display();
ob1.display();
ob2.display();
ob3.display();
}
}
---------------------------------------------------------------
//wap to create a employee class pass the data using constructor
//empno,name,salary,designation.
--------------------------------------------------------------------------
Inheritance 
----------------------------
what is the use of Inheritance ?
Reuse of exixting code and we will add some more features.
Java supports only single inheritance.(single parent)
we have 5 types of inheritance.
1)single inheritance
2)multi-level inheritance
3)hyrarchal inheritance
4)multiple inheritance
5)Hybrid inheritance
------------------------------------------------------------
we use the keyword extends to inherite a parent class into a child class.
we use the keyword super to access the super/parent class variables and methods into the child class.
----------------------------------------------------------------

program-16
----------------------------
package Wednesday;
import java.util.*;
public class FirstJava 
{
int rollno;
String name,address;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name,address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
}
void display()
{
	System.out.println("the rollno is "+rollno + " the name is "+name+" the address is "+address);
}
}
--------------------------------------------------------
Program-17
--------------------
package Wednesday;
import java.util.*;
public class Second extends FirstJava 
{
int m1,m2,m3,total;
void input()
{
	Scanner ob=new Scanner(System.in);
	super.input();
	System.out.println("enter 2 subject's marks");
	m1=ob.nextInt();
	m2=ob.nextInt();
	m3=ob.nextInt();
}
void display()
{
	super.display();
	System.out.println("m1="+ m1 +"  m2= "+m2+"  m3= "+m3);
	System.out.println("the total is "+(m1+m2+m3));
}
public static void main(String[] args) {
	Second obj=new Second();
	obj.input();
	obj.display();
}
}
--------------------------------------------------------------------------
wap to create a employee class and a department class inheriting it.

employee class :- empno,name,salary,designation

department class :-deptno,deptname,location

create object for department class.display all the details
---------------------------------------------------------------------------------------
Inheritance ---(is -a) relationship 
Has-a relation ship
example :-
Employee has a address
House has a kitchen
----------------------------------------------
program-18
--------------------
package Thrusday;

public class Employee 
{
int empno,salary;
String name;
Address address;
public Employee(int empno, String name, int salary, Address address) 
{
	this.empno = empno;
	this.name = name;
	this.salary = salary;
	this.address = address;
}
void display()
{
	System.out.println("the employee no is "+empno);
	System.out.println("the employee name is "+name);
	System.out.println("the employee salary is "+salary);
	System.out.println("the employee address is "+address);
	}
}
---------------------------------------------------------------------
package Thrusday;

public class Address 
{
int streetno;
String streetname,city,state;
public Address(int streetno, String streetname, String city, String state) 
{
	this.streetno = streetno;
	this.streetname = streetname;
	this.city = city;
	this.state = state;
}
@Override
public String toString() //to convert object to string
{
	return "Address [streetno=" + streetno + ", streetname=" + streetname + ", city=" + city + ", state=" + state + "]";
}

}
-------------------------------------------------------------
package Thrusday;

public class Finalclass 
{
	public static void main(String[] args) {
		Address address=new Address(10,"MG Road","bangalore","karnataka");
		Employee emp=new Employee(101,"sandip",78000,address);
		emp.display();
	}
}
-----------------------------------------------------------------
bank class has a insurance
------------------------------------------
wap to display a bank class having :- accno,name,balance,insurance

Insurance class :- insno,instype,premium
Display the details of bank class.
------------------------------------------------------------------------
OOPs concept
-----------------------
1)class -->variables and methods
2)object -->reference pointer
3)constructor -->default and parameterized
4)inheritance -->for code reuseablity
5)polymerphisim
a)run time ---------------------method overriding(abstract class and interface)
b)compile time----------------method overloading
6)abstraction----------hinding the complexcity and displaying the simplicity.(switching on the fan)
7)encapsulation------protecting the data by using private access specifier. (capsule protect the medecine)
-------------------------------------------------------------------------------------------------------------------------------------------
Example-19
------------------------
package Thrusday;
public class EncapsulationExample 
{
private int accno,pin;
private String name,pass;
public int getAccno() {
	return accno;
}
public void setAccno(int accno) {
	this.accno = accno;
}
public int getPin() {
	return pin;
}
public void setPin(int pin) {
	this.pin = pin;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getPass() {
	return pass;
}
public void setPass(String pass) {
	this.pass = pass;
}

}
--------------------------------------------------
package Thrusday;

public class Accessclass 
{
public static void main(String[] args) {
	EncapsulationExample ob=new EncapsulationExample();
	ob.setAccno(1234);
	ob.setName("Akash");
	ob.setPin(7676);
	ob.setPass("akash123");
	System.out.println("the accno is "+ob.getAccno());
	System.out.println("the name is "+ob.getName());
	System.out.println("the pin is "+ob.getPin());
	System.out.println("the password is "+ob.getPass());
	
}
}
--------------------------------------------------------------
static :- if we declare the variable and methods as static we can access it without creating an object.
Because a single copy of the variables and methods are present in the JVM.
we can declare a variable as static.we can declare a method as static.
we can have a static block.The static block execute before the main method.
we can have a static class but it should be a inner class.
we cannot access non-static variables inside the static method().
we can access static variables inside the non-static method().
static variable's value once incremented remain incremented.

* The main use of staic is for memory management.It saves lot of memory.

example 1:
--------------------
package Friday;
import java.util.*;
public class Test1
{
static int rollno;//global variable or instance variable
static String name,address;//global variable or instance variable
static void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
static void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
}
public static void main(String[] args) {
	input();
	display();
	System.out.println("the rollno is "+rollno);
}
}
-------------------------------------------------------------------------------------	
Example -2
---------------------------------
package Friday;
import java.util.*;
public class Test1
{
static int rollno;//global variable or instance variable
static String name,address;//global variable or instance variable
static void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
static void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
}
static
{
	System.out.println("this is a static block");
	System.out.println("this execute before the main method");
}
public static void main(String[] args) {
	input();
	display();
	System.out.println("the rollno is "+rollno);
}
}
-------------------------------------------------------------------------
example-3
----------------------
package Friday;
import java.util.*;
public class Test1
{
static int rollno;//global variable or instance variable
static String name,address;//global variable or instance variable
Test1()
{
	System.out.println("this is a default constructor");
}
static void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
static void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
}
static
{
	System.out.println("this is a static block");
	System.out.println("this execute before the main method");
}
public static void main(String[] args) {
	Test1 ob=new Test1();
	input();
	display();
	System.out.println("the rollno is "+rollno);
}
}
-------------------------------------------------
example-4
-----------------
package Friday;
import java.util.*;
public class Test1
{
static int rollno;//global variable or instance variable
static String name,address;//global variable or instance variable
Test1()
{
	System.out.println("this is a default constructor");
}
static void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
static void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	
}
static
{
	input();
	System.out.println("rollno  :"+rollno);
	System.out.println("this is a static block");
	System.out.println("this execute before the main method");
}
public static void main(String[] args) {
	Test1 ob=new Test1();
	display();
	System.out.println("the rollno is "+ob.rollno);
}
}
------------------------------------------------------------
example-5
---------------------
package Friday;
import java.util.*;
public class Test1
{
 static int rollno;//global variable or instance variable
static String name,address;//global variable or instance variable
static int i;
Test1()
{
	System.out.println("this is a default constructor");
}
static void counter()
{
	i++;
	System.out.println(i);
}
static void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
static void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	
}
static
{
	input();
	System.out.println("rollno  :"+rollno);
	System.out.println("this is a static block");
	System.out.println("this execute before the main method");
}
public static void main(String[] args) {
	Test1 ob=new Test1();
	display();
	System.out.println("the rollno is "+ob.rollno);
	counter();
	counter();
	counter();
	counter();
	
}
}
-----------------------------------
Example-6
-------------------
package Friday;
import java.util.*;
public class Test1
{
  int rollno;//global variable or instance variable
 String name,address;//global variable or instance variable
static int i;
Test1()
{
	System.out.println("this is a default constructor");
}
static void counter()
{
	i++;
	System.out.println(i);
}
 void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name and address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	
}
static
{
	System.out.println("this is a static block");
	System.out.println("this execute before the main method");
}

}
-----------------------------------------
example-7
--------------------
package Friday;
import java.util.*;
public class Test2 extends Test1
{
	int m1,m2,m3,total;
	 void input1()
	{	super.input();
		 Scanner ob=new Scanner(System.in);
		System.out.println("this is a child function");
		System.out.println("enter 3 subject's marks");
		m1=ob.nextInt();
		m2=ob.nextInt();
		m3=ob.nextInt();
	}
	 
	void display1()
	{
		total=m1+m2+m3;
		System.out.println("the total is "+total);
	}
	public static void main(String[] args) 
	{
		Test2 ob=new Test2();
		ob.input();
		ob.input1();
		ob.display();
		ob.display1();
		System.out.println("the rollno is "+ob.rollno);
		counter();
		counter();
		counter();
		counter();
		
	}
}
-----------------------------------------------------------------
Example-8
----------------------
constructor and inheritance
------------------------------------------
In this the super class constructor will execute first then the subclass constructor.
----------------------------------------------------------------------------------------
package Friday;
public class Inheritance1 
{
int rollno;
String name,address;
 Inheritance1(int rollno, String name, String address) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
void display()
{
	System.out.println("rollno :"+rollno);
	System.out.println("name :"+name);
	System.out.println("address :"+address);
	}
}
-----------------------------------------------
package Friday;
public class Inheritance2 extends Inheritance1
{
	int phno;
	String email;
	Inheritance2(int rollno, String name, String address, int phno, String email)
	{
		super(rollno, name, address);//first the super class constructor will execute then the sub class
		this.phno = phno;
		this.email = email;
	}
void display()
{
	super.display();
	System.out.println("the phno is "+phno);
	System.out.println("the email is "+email);
}
public static void main(String[] args)
{
	Inheritance2 ob=new Inheritance2(101,"sandip","bangalore",776655,"sandip@gmail.com");
	ob.display();
}

}
--------------------------------------------------------------
wap to enter details of a 
car class having regno,cname,price,type(petrrol/disel)
luxuary car having ac,stereo,safety
use inheritance and constructor and display the details.
create 2 or more objects.
--------------------------------------------------------------------------
Example-9
---------------------
package Friday;
public class GetterSetter 
{
private int empno,salary;
private String name,address;
private Bank bank; 
public Bank getBank() {
	return bank;
}
public void setBank(Bank bank) {
	this.bank = bank;
}
public int getEmpno() {
	return empno;
}
public void setEmpno(int empno) {
	this.empno = empno;
}
public int getSalary() {
	return salary;
}
public void setSalary(int salary) {
	this.salary = salary;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getAddress() {
	return address;
}
public void setAddress(String address) {
	this.address = address;
}
}
-------------------------------------------------------------------------
package Friday;

public class Bank 
{
private int accno,bal;
private String loc,IFSC;
public int getAccno() {
	return accno;
}
public void setAccno(int accno) {
	this.accno = accno;
}
public int getBal() {
	return bal;
}
public void setBal(int bal) {
	this.bal = bal;
}
public String getLoc() {
	return loc;
}
public void setLoc(String loc) {
	this.loc = loc;
}
public String getIFSC() {
	return IFSC;
}
public void setIFSC(String iFSC) {
	IFSC = iFSC;
}
@Override
public String toString() {
	return "Bank [accno=" + accno + ", bal=" + bal + ", loc=" + loc + ", IFSC=" + IFSC + "]";
}


}
------------------------------------------------------------------------------
package Friday;

public class Finalclass 
{
public static void main(String[] args) {
	Bank ob=new Bank();
	ob.setAccno(1001);
	ob.setIFSC("SBIN006758");
	ob.setLoc("MG Road");
	ob.setBal(7500);
	GetterSetter ob1=new GetterSetter();
	ob1.setAddress("bangalore");
	ob1.setEmpno(101);
	ob1.setName("sandip");
	ob1.setSalary(78000);
	ob1.setBank(ob);
	System.out.println(ob1.getEmpno());
	System.out.println(ob1.getName());
	System.out.println(ob1.getSalary());
	System.out.println(ob1.getAddress());
	System.out.println(ob1.getBank());
}
}
------------------------------------------------------------------------------------------------------




























